<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos</title>
    <link rel="stylesheet" href="/styles.css">
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="/products">Productos</a></li>
                <li><a href="/realtimeproducts">Productos en Tiempo Real</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <h1>Lista de Productos</h1>

        <!-- Paginación -->
        <div>
            {{#if hasPrevPage}}
            <a href="/products?page={{prevPage}}&limit={{limit}}&sort={{sort}}&query={{query}}">Página anterior</a>
            {{/if}}

            <span>Página {{page}} de {{totalPages}}</span>

            {{#if hasNextPage}}
            <a href="/products?page={{nextPage}}&limit={{limit}}&sort={{sort}}&query={{query}}">Página siguiente</a>
            {{/if}}
        </div>

        <!-- Mostrar productos -->
        <ul id="product-list">
            {{#each payload}}
            <li id="product-{{this._id}}">
                <img src="{{getFirstThumbnail this.thumbnails}}" alt="Thumbnail del producto" width="100">
                <span>{{this.name}} - ${{this.price}}</span>

                <button class="add-to-cart-btn" onclick="addToCart('{{this._id}}')">Agregar al Carrito</button>
                <button class="delete-product-btn" onclick="deleteProduct('{{this._id}}')">Eliminar Producto</button>
            </li>
            {{/each}}
        </ul>

    </main>

    <footer>
        <p>&copy; 2025 Mi Tienda. Todos los derechos reservados.</p>
    </footer>

    <script>
        const socket = io();

        // Función para agregar productos al carrito
        function addToCart(productId) {
            fetch(`/api/carts/1/product/${productId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    alert('Producto agregado al carrito');
                });
        }

        // Función para eliminar un producto
        function deleteProduct(productId) {
            fetch(`/api/products/${productId}`, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => {
                    alert('Producto eliminado');
                    // Eliminar el producto de la lista en la página
                    document.getElementById(`product-${productId}`).remove();
                    socket.emit('deleteProduct', productId);
                })
                .catch(error => {
                    console.error('Error deleting product:', error);
                });
        }

        // Escuchar los eventos de WebSocket
        socket.on('productDeleted', (productId) => {
            const productElement = document.getElementById(`product-${productId}`);
            if (productElement) {
                productElement.remove();
            }
        });
    </script>
</body>
</html>
